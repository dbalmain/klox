class DevonshireCream {
    serveOn() {
        return "Scones";
    }
}
print DevonshireCream;

var icecream = DevonshireCream();
print icecream;

class Box {}
fun notMethod(argument) {
    print "called function with " + argument;
}
var box = Box();
box.function = notMethod;
box.function("argument");

class Bacon {
    eat() {
        print "Crunch crunch crunch!";
    }
}
Bacon().eat();

class Egotist {
    speak() {
        print this;
    }
}
var egotist = Egotist();
var x = egotist.speak();
//var method = Egotist().speak;
//method();

class Cake {
    taste() {
        var adjective = "delicious";
        print "The " + this.flavor + " cake is " + adjective + "!";
    }
}
var cake = Cake();
cake.flavor = "German chocolate";
cake.taste(); // Prints "The German chocolate cake is delicious!".

class Thing {
    getCallback() {
        fun localFunction() {
            print this;
        }
        return localFunction;
    }
}

var callback = Thing().getCallback();
callback();

class Doughnut {
    cook() {
        print "Fry until golden brown.";
    }
}

class BostonCream < Doughnut {
    cook() {
        super.cook();
        print "Pipe full of custard and coat with chocolate.";
    }
}

BostonCream().cook();
